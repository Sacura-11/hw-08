{"version":3,"file":"static/js/111.9da11e32.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","redux/contacts.selectors.js","redux/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/contactsOperations.js","webpack://react-homework-template/./src/pages/Contacts/ContactsPage.module.css?3d45","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formTitle\":\"ContactForm_formTitle__N6O4g\",\"formInput\":\"ContactForm_formInput__GszVU\",\"saveButton\":\"ContactForm_saveButton__Ua4ZN\"};","// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { nanoid } from 'nanoid';\n// import { getContacts } from 'redux/selectors';\n// import { addContact } from 'redux/contactsOperations';\n// import css from './ContactForm.module.css';\n\n// const initialValues = {\n//   name: '',\n//   phone: '',\n// };\n\n// export const ContactForm = () => {\n//   const dispatch = useDispatch();\n//   const contacts = useSelector(getContacts);\n  \n//   const [formValues, setFormValues] = useState(initialValues);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const newContact = {\n//       id: nanoid(),\n//       name: formValues.name,\n//       phone: formValues.phone,\n//     };\n\n//     if (contacts.find((contact) => contact.name === newContact.name)) {\n//       return alert(`${newContact.name} is already in contacts`);\n//     }\n\n//     dispatch(addContact(newContact));\n//     setFormValues(initialValues); // Reset the form\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormValues({\n//       ...formValues,\n//       [name]: value,\n//     });\n//   };\n\n//   return (\n//     <form className={css.form} onSubmit={handleSubmit}>\n//       <label>Name: </label>\n//       <input className={css.formInput}\n//         type=\"text\"\n//         name=\"name\"\n//         value={formValues.name}\n//         onChange={handleInputChange}\n//         required\n//       />\n//       <label>Number: </label>\n//       <input className={css.formInput}\n//         type=\"tel\"\n//         name=\"phone\"\n//         value={formValues.phone}\n//         onChange={handleInputChange}\n//         required\n//       />\n//       <button className={css.saveButton} type=\"submit\">Save contact</button>\n//     </form>\n//   );\n// };\n\n\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contactsSlice';\n\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onSubmit = contact => {\n    dispatch(addContact(contact));\n    reset();\n  };\n\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n        <label className={css.formLabel}>\n          <span>Name:</span>\n          <input className={css.formInput} {...register('name', { required: true })} type=\"text\" />\n          {errors.name && <span>This field is required</span>}\n        </label>\n        <label className={css.formLabel}>\n          <span>Number:</span>\n          <input className={css.formInput} {...register('number', { required: true })} type=\"text\" />\n          {errors.number && <span>This field is required</span>}\n        </label>\n\n        <button className={css.saveButton} type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"black\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n        visible={true}\n      />\n    </>\n  );\n};","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectPhonebook = state => state.phonebook;\n\nexport const selectContacts = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.contacts\n);\nexport const selectContactsIsLoading = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.isLoading\n);\nexport const selectContactsError = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.error\n);\nexport const selectContactsFilterTerm = createSelector(\n  selectPhonebook,\n  phonebook => phonebook.filterTerm\n);\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\n\nexport const getIsLoading = state => state.tasks.isLoading;\nexport const getError = state => state.tasks.error;\n\nexport const selectContactFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\",\"itemName\":\"ContactList_itemName__6OYsD\",\"contactContainer_left\":\"ContactList_contactContainer_left__0TGr3\",\"contactContainer_right\":\"ContactList_contactContainer_right__XOVTR\"};","import { Loader } from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectContacts,\n    selectContactsIsLoading,\n} from 'redux/contacts.selectors';\nimport {\n\n    deleteContact,\n    fetchContacts,\n} from 'redux/contactsSlice';\nimport { getFilter } from 'redux/selectors';\n\nimport css from './ContactList.module.css';\n\nconst getFilteredContacts = (contacts, filter) => {\n    return contacts?.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n};\n\n\nexport const ContactList = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectContactsIsLoading);\n    // const error = useSelector(selectContactsError);\n    const filter = useSelector(getFilter);\n    const filteredContacts = getFilteredContacts(contacts, filter);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n\n    const onDeleteContact = contactId => {\n        dispatch(deleteContact(contactId));\n    };\n\n    return (\n        <div>\n            {isLoading && <Loader />}\n            <ul className={css.list}>\n                {Array.isArray(contacts) &&\n                    filteredContacts?.map(contact => {\n                        return (\n                            <li className={css.listItem} key={contact.id}>\n                                <h3>{contact.name}</h3>\n                                <div className={css.contactContainer_right}>\n                                <p>{contact.number}</p>\n                                <button className={css.deleteButton} onClick={() => onDeleteContact(contact.id)}>\n                                X\n                                </button>\n                                </div>\n                            </li>\n                        );\n                    })}\n            </ul>\n        </div>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterField\":\"Filter_filterField__hjFfe\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterChange = event => {\n    return dispatch(setFilter(event.target.value));\n  };\n    \n\n    return (\n        <div className={css.filterContainer}>\n            <p className={css.filterField}>Find contact by name</p>\n            <input className={css.filterInput}\n                name=\"filter\"\n                type=\"text\"\n                id=\"filter\"\n                value={filter}\n                onChange={handleFilterChange} />\n        </div>\n    );\n};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://653fa39c9e8bd3be29e0f4f2.mockapi.io/api/v1';\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/fetchContacts',\n    async (_, { rejectWithValue }) => {\n        try {\n            const response = await axios.get('/contacts');\n            return response.data;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nexport const addContact = createAsyncThunk(\n    'contacts/addContact',\n    async ({ name, phone }, { rejectWithValue }) => {\n        try {\n            const response = await axios.post('/contacts', { name, phone });\n            return response.data;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/deleteContact',\n    async (contactId, { rejectWithValue }) => {\n        try {\n            const response = await axios.delete(`/contacts/${contactId}`);\n            return response.data;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__jIags\",\"sectionContainer\":\"ContactsPage_sectionContainer__7Wvpj\",\"title\":\"ContactsPage_title__TdWmn\"};","import { ContactForm } from 'components/ContactForm/ContactForm'\nimport { ContactList } from 'components/ContactList/ContactList'\nimport { Filter } from 'components/Filter/Filter'\n// import { ContactList } from 'components/ContactList/ContactList'\nimport React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchContacts } from 'redux/contactsOperations'\n\nimport css from './ContactsPage.module.css';\n\nexport const ContactsPage = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div className={css.container}>\n           <div className={css.sectionContainer}>\n           <h2 className={css.title}>Add new contact</h2>\n            <ContactForm />\n           </div>\n\n            <div className={css.sectionContainer}>\n            <h2 className={css.title}>Contacts list</h2>\n            <Filter />\n            <ContactList />\n            </div>\n        </div>\n\n    )\n}\n\nexport default ContactsPage\n"],"names":["ContactForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","useEffect","fetchContacts","className","css","onSubmit","contact","addContact","required","type","name","number","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","visible","selectPhonebook","state","phonebook","selectContacts","createSelector","contacts","selectContactsIsLoading","isLoading","getFilter","error","filterTerm","filter","ContactList","useSelector","filteredContacts","toLowerCase","includes","getFilteredContacts","Array","isArray","map","onClick","contactId","id","deleteContact","Filter","value","onChange","event","setFilter","target","axios","createAsyncThunk","_","rejectWithValue","response","data","message","phone","ContactsPage"],"sourceRoot":""}